{"variables":[],"info":{"name":"Laravel API","_postman_id":"a1ef41c4-20b6-43f4-b52d-672322272178","description":"","schema":"https:\/\/schema.getpostman.com\/json\/collection\/v2.0.0\/collection.json"},"item":[{"name":"Activities\n\nAPIs for users activities","description":"","item":[{"name":"comment","request":{"url":"http:\/\/localhost\/api\/makeComment","method":"POST","body":{"mode":"formdata","formdata":[{"key":"id","value":6,"type":"text","enabled":true},{"key":"type","value":16,"type":"text","enabled":true},{"key":"body","value":"i9XLBPhQli8xBdau","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"delete comment","request":{"url":"http:\/\/localhost\/api\/deleteComment","method":"DELETE","body":{"mode":"formdata","formdata":[{"key":"id","value":12,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"unlike","request":{"url":"http:\/\/localhost\/api\/unlike","method":"DELETE","body":{"mode":"formdata","formdata":[{"key":"id","value":17,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"like","request":{"url":"http:\/\/localhost\/api\/makeLike","method":"POST","body":{"mode":"formdata","formdata":[{"key":"id","value":14,"type":"text","enabled":true},{"key":"type","value":11,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"updates\nGet user's updates from following users","request":{"url":"http:\/\/localhost\/api\/updates","method":"GET","body":{"mode":"formdata","formdata":[{"key":"user_id","value":1,"type":"text","enabled":true},{"key":"max_updates","value":20,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"notifications\ngets a user's notifications","request":{"url":"http:\/\/localhost\/api\/notifications","method":"GET","body":{"mode":"formdata","formdata":[{"key":"page","value":14,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"list comments\nlists comments for a specific resource(review,update)","request":{"url":"http:\/\/localhost\/api\/listComments","method":"GET","body":{"mode":"formdata","formdata":[{"key":"id","value":"p5bRIHVe8MOSSE6Y","type":"text","enabled":true},{"key":"type","value":18,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"list likes\nlists likes for a specific resource(review,update)","request":{"url":"http:\/\/localhost\/api\/listLikes","method":"GET","body":{"mode":"formdata","formdata":[{"key":"id","value":14,"type":"text","enabled":true},{"key":"type","value":5,"type":"text","enabled":true}]},"description":"","response":[]}}]},{"name":"Book","description":"","item":[{"name":"Show book","request":{"url":"http:\/\/localhost\/api\/books\/show","method":"GET","body":{"mode":"formdata","formdata":[{"key":"book_id","value":9,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"List all books","request":{"url":"http:\/\/localhost\/api\/books","method":"GET","body":{"mode":"formdata","formdata":[{"key":"page","value":17,"type":"text","enabled":true},{"key":"books_per_page","value":18,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Show books by genre","request":{"url":"http:\/\/localhost\/api\/books\/genre\/{genre_name}","method":"GET","body":{"mode":"formdata","formdata":[{"key":"genreName","value":"LJ3gWGl6uLU2Imlq","type":"text","enabled":true},{"key":"page","value":4,"type":"text","enabled":true},{"key":"books_per_page","value":17,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"get the needed book by its name","request":{"url":"http:\/\/localhost\/api\/Books\/book_title\/{book_title}","method":"GET","body":{"mode":"formdata","formdata":[{"key":"title","value":"Bx8QnARWW1ZCLRSV","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"get the needed book by its ISBN","request":{"url":"http:\/\/localhost\/api\/Books\/book_ISBN\/{book_isbn}","method":"GET","body":{"mode":"formdata","formdata":[{"key":"ISBN","value":8,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"search about the needed book by its Author name","request":{"url":"http:\/\/localhost\/api\/Books\/book_Authorname\/{author_name}","method":"GET","body":{"mode":"formdata","formdata":[{"key":"Author_name","value":"UEvwHADgnFNvvQSx","type":"text","enabled":true}]},"description":"","response":[]}}]},{"name":"Review","description":"","item":[{"name":"Get review statistics given a list of ISBNs\ntake alist of books and then return their reviews And Rates\nand i will use it to get the review for one book array of one element","request":{"url":"http:\/\/localhost\/api\/reviwes\/users\/books\/{book_id}","method":"GET","body":{"mode":"formdata","formdata":[{"key":"isbns","value":"7YzIsyD2loArFgLC","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Get the reviews for a book given a title string","request":{"url":"http:\/\/localhost\/api\/reviwes\/books\/{boodTitle}","method":"GET","body":{"mode":"formdata","formdata":[{"key":"title","value":"CwNfpkCINgB6cD5c","type":"text","enabled":true},{"key":"author","value":"ZDHwpRpYXXNbP1Oc","type":"text","enabled":true},{"key":"rating","value":6,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"List the reviews for a specific user","request":{"url":"http:\/\/localhost\/api\/listReviewOfUser","method":"GET","body":{"mode":"formdata","formdata":[{"key":"userId","value":"PPYYvKY6JtHGLI8s","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"get a specific review with it's comments and likes","request":{"url":"http:\/\/localhost\/api\/showReviewOfBook\/{id}","method":"GET","body":{"mode":"formdata","formdata":[{"key":"reviewId","value":"0YtQ1eM2onmMzHOK","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Get the review for specific user on a specific Book","request":{"url":"http:\/\/localhost\/api\/showReviewForBookForUser\/{user_id}\/{book_id}","method":"GET","body":{"mode":"formdata","formdata":[{"key":"userId","value":"1nE0dKftRj8daq70","type":"text","enabled":true},{"key":"bookId","value":"1moBMVg7BWvGe4Dc","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Get the review for specific user on a specific Book","request":{"url":"http:\/\/localhost\/api\/showReviewsForABook\/{book_id}","method":"GET","body":{"mode":"formdata","formdata":[{"key":"bookId","value":2,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Create a review","request":{"url":"http:\/\/localhost\/api\/reviwes\/create","method":"POST","body":{"mode":"formdata","formdata":[{"key":"bookId","value":11,"type":"text","enabled":true},{"key":"shelf","value":12,"type":"text","enabled":true},{"key":"body","value":"MoBwcPoUXyNwveet","type":"text","enabled":true},{"key":"rating","value":19,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"List all reviews of the authenticated user","request":{"url":"http:\/\/localhost\/api\/myreviews","method":"GET","body":{"mode":"formdata","formdata":[]},"description":"","response":[]}},{"name":"Edit a review","request":{"url":"http:\/\/localhost\/api\/reviwes\/edit","method":"PUT","body":{"mode":"urlencoded","urlencoded":[{"key":"reviewId","value":13,"type":"text","enabled":true},{"key":"body","value":"jXoo5jsJqDc1b3Qu","type":"text","enabled":true},{"key":"rating","value":16,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Remove a Review","request":{"url":"http:\/\/localhost\/api\/reviwes\/delete","method":"DELETE","body":{"mode":"formdata","formdata":[{"key":"reviewId","value":12,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Recent reviews from all members.","request":{"url":"http:\/\/localhost\/api\/reviwes","method":"GET","body":{"mode":"formdata","formdata":[]},"description":"","response":[]}}]},{"name":"Shelf","description":"","item":[{"name":"List all shelves of the authenticated user .","request":{"url":"http:\/\/localhost\/api\/shlef\/list","method":"GET","body":{"mode":"formdata","formdata":[]},"description":"","response":[]}},{"name":"Show a shelf","request":{"url":"http:\/\/localhost\/api\/shelf\/{shelf_name}","method":"GET","body":{"mode":"formdata","formdata":[{"key":"shelf_name","value":"gkg8wsu9tTrjSQUM","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Get User`s shelves","request":{"url":"http:\/\/localhost\/api\/shelf\/{user_id}","method":"GET","body":{"mode":"formdata","formdata":[{"key":"user_id","value":4,"type":"text","enabled":true},{"key":"page","value":4,"type":"text","enabled":true},{"key":"books_per_page","value":12,"type":"text","enabled":true}]},"description":"","response":[]}},{"name":"show books on the shelf","request":{"url":"http:\/\/localhost\/api\/shelf\/{user_id}\/{shelf_name}","method":"GET","body":{"mode":"formdata","formdata":[{"key":"user_id","value":4,"type":"text","enabled":true},{"key":"shelf_name","value":"DpG9GQxuCmvkPwJf","type":"text","enabled":true}]},"description":"","response":[]}}]},{"name":"User \n\nAPIs for managing users (Sofyan)","description":"","item":[{"name":"Sign Up","request":{"url":"http:\/\/localhost\/api\/signup","method":"POST","body":{"mode":"formdata","formdata":[{"key":"email","value":"7QzVe7qHotjGoz9F","type":"text","enabled":true},{"key":"password","value":"MWcqGBBxgna97vYr","type":"text","enabled":true},{"key":"password_confirmation","value":"ggN4pGL4vo7m0Iux","type":"text","enabled":true},{"key":"name","value":"j70lvgv0iPPOhNnt","type":"text","enabled":true},{"key":"gender","value":"SF8u3xFvurhKJQdy","type":"text","enabled":true},{"key":"birthday","value":"7zbl8Ry53d22dIS7","type":"text","enabled":true},{"key":"country","value":"OZfkKpIRgnJkXgnV","type":"text","enabled":true},{"key":"city","value":"LPwA42MaVl9ezmEi","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"LogIn","request":{"url":"http:\/\/localhost\/api\/login","method":"POST","body":{"mode":"formdata","formdata":[{"key":"email","value":"sc59GVDdSDBpbFuf","type":"text","enabled":true},{"key":"password","value":"WSOiVin1rWketSCF","type":"text","enabled":true}]},"description":"Login : Take the request has [email , password] and check that the email is email type and exists in database and also the password\nthen , if all is correct return a response with status 200 and json file has [name , username , image_link]\nand if there are eny errors, return a response with status 405 has the message describe the error","response":[]}},{"name":"Change password","request":{"url":"http:\/\/localhost\/api\/changePassword","method":"POST","body":{"mode":"formdata","formdata":[{"key":"password","value":"kdwSKmD1HDORP8Dt","type":"text","enabled":true},{"key":"newPassword","value":"BmGL0CY3ittn0gDF","type":"text","enabled":true},{"key":"newPassword_confirmation","value":"wkcelYSzoBfCPlQD","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Change Name","request":{"url":"http:\/\/localhost\/api\/changeName","method":"POST","body":{"mode":"formdata","formdata":[{"key":"password","value":"y79ZgHX6mfC53enZ","type":"text","enabled":true},{"key":"newName","value":"HnCMkULYEJB01QAG","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Change Image","request":{"url":"http:\/\/localhost\/api\/changeImage","method":"POST","body":{"mode":"formdata","formdata":[{"key":"Image","value":"DpLat7JaYhC3R9wb","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Delete","request":{"url":"http:\/\/localhost\/api\/delete","method":"POST","body":{"mode":"formdata","formdata":[{"key":"password","value":"lmwQ8CUxowZ2e06u","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Show setting","request":{"url":"http:\/\/localhost\/api\/showSetting","method":"GET","body":{"mode":"formdata","formdata":[]},"description":"","response":[]}},{"name":"Log Out","request":{"url":"http:\/\/localhost\/api\/logout","method":"DELETE","body":{"mode":"formdata","formdata":[]},"description":"log out : Take the request has [Authorization] in the header and this paramater is checked in middleware\nand if it valid one the function return it into invalid and return response with status 200 with message [you have logged out]\nand if this [Authorization] is invalid the middleware return a response with status 405 has a message [UnAuthorized].","response":[]}},{"name":"Change birthday","request":{"url":"http:\/\/localhost\/api\/changeBirthday","method":"GET","body":{"mode":"formdata","formdata":[{"key":"birthday","value":"T3Fgu0bM2SQuXlSe","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Who can see my birthday","request":{"url":"http:\/\/localhost\/api\/whoCanSeeMyBirthday","method":"GET","body":{"mode":"formdata","formdata":[{"key":"seeMyBirthday","value":"7v6RsujV6XG5Znye","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Change country","request":{"url":"http:\/\/localhost\/api\/changeCountry","method":"GET","body":{"mode":"formdata","formdata":[{"key":"country","value":"UcloLzppfl7Ly1D7","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Who can see my country","request":{"url":"http:\/\/localhost\/api\/whoCanSeeMyCountry","method":"GET","body":{"mode":"formdata","formdata":[{"key":"seeMyCountry","value":"bTB68F1k3vHZ8Uk5","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Change city","request":{"url":"http:\/\/localhost\/api\/changeCity","method":"GET","body":{"mode":"formdata","formdata":[{"key":"city","value":"4XKfkmpXGfBlO9ye","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"Who can see my city","request":{"url":"http:\/\/localhost\/api\/whoCanSeeMyCity","method":"GET","body":{"mode":"formdata","formdata":[{"key":"seeMyCity","value":"04GIA0JXLsiBNFHz","type":"text","enabled":true}]},"description":"","response":[]}},{"name":"search for an user","request":{"url":"http:\/\/localhost\/api\/UserController\/{user}","method":"GET","body":{"mode":"formdata","formdata":[{"key":"userName","value":"CE2Wi0eWhr7uFLoa","type":"text","enabled":true}]},"description":"","response":[]}}]},{"name":"[Following].Follow User\nfollowUser function\n\nChecking the request`s paramaters that has [user_id] paramater\n\nit is aborting in case no user_id is given\n\nValidate the existance of the user_id\nif the user doesn`t exist aborting\n\nValidate the relationship is not existing before.\nresponsing 400 if it exist.\n\nif not exists creating new instance of following model\n\n`\nincreamenting both Follower: follwoing_count \/ Followed: followers_count \n`\n\nResponses with successfully message in case of passing aborting","description":"","item":[{"name":"http:\/\/localhost\/api\/follow","request":{"url":"http:\/\/localhost\/api\/follow","method":"POST","body":{"mode":"formdata","formdata":[{"key":"user_id","value":9,"type":"text","enabled":true}]},"description":"","response":[]}}]},{"name":"[Following].Followers List\n\nfollowersUser function .\n\n\nreturns followers list of the given [ user_id ] and their currently reading books\n\neach page contains 30 user limiting query with max 30 record.\n\nChecking the request paramaters and validate the existance of the user\n\naborting in-case of user is not exist\n\nother wise returns the user`s followers list from database table .","description":"","item":[{"name":"http:\/\/localhost\/api\/followers","request":{"url":"http:\/\/localhost\/api\/followers","method":"GET","body":{"mode":"formdata","formdata":[{"key":"page","value":16,"type":"text","enabled":true},{"key":"user_id","value":9,"type":"text","enabled":true}]},"description":"","response":[]}}]},{"name":"[Following].Following List\n\n\nfollowingUser function .\n\nreturns following list of the given [ user_id ] and their currently reading books\n\neach page contains 30 user limiting query with max 30 record.\n\nChecking the request paramaters and validate the existance of the user\n\naborting in-case of user is not exist\n\nother wise returns the user`s following list from database table .","description":"","item":[{"name":"http:\/\/localhost\/api\/following","request":{"url":"http:\/\/localhost\/api\/following","method":"GET","body":{"mode":"formdata","formdata":[{"key":"page","value":11,"type":"text","enabled":true},{"key":"user_id","value":4,"type":"text","enabled":true}]},"description":"","response":[]}}]},{"name":"[Following].Unfollow User\nunfollowUser function\n\nChecking the request`s paramaters that has [user_id] paramater\n\nit is aborting in case no user_id is given\n\nValidate the existance of the user_id\nif the user doesn`t exist aborting\n\nValidate the relationship is existing .\nif it is not existing it`s aborting .\n\nif exists it is being removes successfully\n\n`\ndecreamenting both Follower: follwoing_count \/ Followed: followers_count \n`\n\nResponses with successfully message in case of passing aborting","description":"","item":[{"name":"http:\/\/localhost\/api\/unfollow","request":{"url":"http:\/\/localhost\/api\/unfollow","method":"DELETE","body":{"mode":"formdata","formdata":[{"key":"user_id","value":13,"type":"text","enabled":true}]},"description":"","response":[]}}]},{"name":"[Shelf].Add Book\naddBook function . \n\nAdd a book to a shelf\n\n\ngiven request paramters (book_id , shelf_id=0)\n\nchecking the existance of the given book on the shelf if it already exists it`s being update\n\nif it`s new entry creating new record and responses successfully add \n\nin-case of the book is already exists and the user trying to add it onto the same shelf\n\nit returnd an error message ( Something gone wrong).","description":"","item":[{"name":"http:\/\/localhost\/api\/shelf\/add_book","request":{"url":"http:\/\/localhost\/api\/shelf\/add_book","method":"POST","body":{"mode":"formdata","formdata":[{"key":"shelf_id","value":11,"type":"text","enabled":true},{"key":"book_id","value":5,"type":"text","enabled":true}]},"description":"","response":[]}}]},{"name":"[Shelf].Remove Book\nremoveBook function\n\nRemove a book from a shelf\n\nit is required (book_id,shelf_id) in the request\n\nValidate the existance of these paramaters in the request\n\nThen searching for them in the DB . deleting them if exists\n\nreturns successfully removed when it is deleted \n\notherwise it respones with error message .","description":"","item":[{"name":"http:\/\/localhost\/api\/shelf\/remove_book","request":{"url":"http:\/\/localhost\/api\/shelf\/remove_book","method":"DELETE","body":{"mode":"formdata","formdata":[{"key":"shelf_id","value":16,"type":"text","enabled":true},{"key":"book_id","value":17,"type":"text","enabled":true}]},"description":"","response":[]}}]},{"name":"[User].Show Profile\n\nshowProfile function\n\nchecking the request given paramaters if user_id exists \n\nit returns his profile-details\n\nother-wise it returns authenticated user`s profile from database user table .","description":"","item":[{"name":"http:\/\/localhost\/api\/showProfile","request":{"url":"http:\/\/localhost\/api\/showProfile","method":"GET","body":{"mode":"formdata","formdata":[{"key":"id","value":12,"type":"text","enabled":true}]},"description":"","response":[]}}]}]}